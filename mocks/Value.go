// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Value is an autogenerated mock type for the Value type
type Value struct {
	mock.Mock
}

// Get provides a mock function with given fields: valuePtr
func (_m *Value) Get(valuePtr interface{}) error {
	ret := _m.Called(valuePtr)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(valuePtr)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// HasValue provides a mock function with given fields:
func (_m *Value) HasValue() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewValue interface {
	mock.TestingT
	Cleanup(func())
}

// NewValue creates a new instance of Value. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewValue(t mockConstructorTestingTNewValue) *Value {
	mock := &Value{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
